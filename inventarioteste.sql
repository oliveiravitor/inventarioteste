CREATE DATABASE IF NOT EXISTS `inventarioTeste`;

-- MySQL Script generated by MySQL Workbench
-- 12/04/15 11:03:23
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema inventarioTeste
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema inventarioTeste
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `inventarioTeste` DEFAULT CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
USE `inventarioTeste` ;

-- -----------------------------------------------------
-- Table `inventarioTeste`.`endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventarioTeste`.`endereco` (
  `idendereco` INT NOT NULL AUTO_INCREMENT,
  `logradouroEndereco` VARCHAR(60) NOT NULL,
  `numeroEndereco` VARCHAR(10) NOT NULL,
  `complementoEndereco` VARCHAR(45) NULL,
  `bairroEndereco` VARCHAR(45) NOT NULL,
  `cidadeEndereco` VARCHAR(45) NOT NULL,
  `cepEndereco` VARCHAR(10) NOT NULL,
  `estadoEndereco` CHAR(2) NOT NULL,
  `statusEndereco` ENUM('A', 'I') NOT NULL DEFAULT 'A',
  PRIMARY KEY (`idendereco`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventarioTeste`.`localidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventarioTeste`.`localidade` (
  `idLocalidade` INT NOT NULL AUTO_INCREMENT,
  `idEnderecoLocal` INT NOT NULL,
  `identificacaoLocal` VARCHAR(45) NOT NULL,
  `setorLocal` VARCHAR(45) NOT NULL,
  `statusLocal` ENUM('A', 'I') NOT NULL DEFAULT 'A',
  PRIMARY KEY (`idLocalidade`),
  INDEX `fk_localidade_endereco1_idx` (`idEnderecoLocal` ASC),
  CONSTRAINT `fk_localidade_endereco1`
    FOREIGN KEY (`idEnderecoLocal`)
    REFERENCES `inventarioTeste`.`endereco` (`idendereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventarioTeste`.`usuarioFinal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventarioTeste`.`usuarioFinal` (
  `idUsuarioFinal` INT NOT NULL AUTO_INCREMENT,
  `nomeUsuario` VARCHAR(60) NOT NULL,
  `matriculaUsuario` INT NOT NULL,
  `emailUsuario` VARCHAR(45) NOT NULL,
  `telefoneUsuario` VARCHAR(15) NOT NULL,
  `statusUsuario` ENUM('A', 'I') NOT NULL DEFAULT 'A',
  PRIMARY KEY (`idUsuarioFinal`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventarioTeste`.`administrador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventarioTeste`.`administrador` (
  `idAdministrador` INT NOT NULL AUTO_INCREMENT,
  `nomeCompletoAdmin` VARCHAR(60) NOT NULL,
  `matriculaAdmin` INT NOT NULL,
  `telefoneAdmin` VARCHAR(15) NOT NULL,
  `emailAdmin` VARCHAR(45) NOT NULL,
  `statusAdmin` ENUM('A', 'I') NOT NULL DEFAULT 'A',
  `senhaAdmin` VARCHAR(20) NOT NULL DEFAULT '',
  PRIMARY KEY (`idAdministrador`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventarioTeste`.`fornecedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventarioTeste`.`fornecedor` (
  `idFornecedor` INT NOT NULL AUTO_INCREMENT,
  `idEnderecoFornecedor` INT NOT NULL,
  `nomeContatoFornecedor` VARCHAR(45) NOT NULL,
  `nomeFornecedor` VARCHAR(45) NOT NULL,
  `emailFornecedor` VARCHAR(45) NOT NULL,
  `telefoneFornecedor` VARCHAR(15) NOT NULL,
  `statusFornecedor` ENUM('A', 'I') NOT NULL DEFAULT 'A',
  PRIMARY KEY (`idFornecedor`),
  INDEX `fk_fornecedor_endereco1_idx` (`idEnderecoFornecedor` ASC),
  CONSTRAINT `fk_fornecedor_endereco1`
    FOREIGN KEY (`idEnderecoFornecedor`)
    REFERENCES `inventarioTeste`.`endereco` (`idendereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventarioTeste`.`equipamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventarioTeste`.`equipamento` (
  `idEquip` INT NOT NULL AUTO_INCREMENT,
  `idUsuarioFinal` INT NOT NULL,
  `idLocalidade` INT NOT NULL,
  `idFornecedor` INT NOT NULL,
  `tipoEquip` ENUM('A', 'D', 'N', 'I' ) NOT NULL,
  `origemEquip` ENUM('L', 'P') NOT NULL,
  `modeloEquip` VARCHAR(25) NOT NULL,
  `numSerieEquip` VARCHAR(25) NOT NULL,
  `numSerieGabineteEquip` VARCHAR(25) NOT NULL,
  `numSerieMouseEquip` VARCHAR(25) NOT NULL,
  `numSerieTecladoEquip` VARCHAR(25) NOT NULL,
  `numSerieMonitorEquip` VARCHAR(45) NOT NULL,
  `dataEntradaEquip` TIMESTAMP NOT NULL DEFAULT current_timestamp,
  `statusEquip` ENUM('U', 'L', 'M', 'D') NOT NULL DEFAULT 'L',
  `equipamentocol` VARCHAR(45) NULL,
  PRIMARY KEY (`idEquip`),
  INDEX `fk_Equipamento_usuarioFinal1_idx` (`idUsuarioFinal` ASC),
  INDEX `fk_Equipamento_localidade1_idx` (`idLocalidade` ASC),
  INDEX `fk_Equipamento_fornecedor1_idx` (`idFornecedor` ASC),
  UNIQUE INDEX `numSerieEquip_UNIQUE` (`numSerieEquip` ASC),
  CONSTRAINT `fk_Equipamento_usuarioFinal1`
    FOREIGN KEY (`idUsuarioFinal`)
    REFERENCES `inventarioTeste`.`usuarioFinal` (`idUsuarioFinal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Equipamento_localidade1`
    FOREIGN KEY (`idLocalidade`)
    REFERENCES `inventarioTeste`.`localidade` (`idLocalidade`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Equipamento_fornecedor1`
    FOREIGN KEY (`idFornecedor`)
    REFERENCES `inventarioTeste`.`fornecedor` (`idFornecedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventarioTeste`.`dataDescarte`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventarioTeste`.`dataDescarte` (
  `idDataDescarte` INT NOT NULL AUTO_INCREMENT,
  `idEquip` INT NOT NULL,
  `dataDescarte` TIMESTAMP NOT NULL DEFAULT current_timestamp,
  INDEX `fk_dataDescarte_Equipamento_idx` (`idEquip` ASC),
  PRIMARY KEY (`idDataDescarte`),
  CONSTRAINT `fk_dataDescarte_Equipamento`
    FOREIGN KEY (`idEquip`)
    REFERENCES `inventarioTeste`.`equipamento` (`idEquip`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventarioTeste`.`manipula`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventarioTeste`.`manipula` (
  `idAdministrador` INT NOT NULL,
  `idEquip` INT NOT NULL,
  `dataEntrada` TIMESTAMP NULL DEFAULT current_timestamp,
  PRIMARY KEY (`idAdministrador`, `idEquip`),
  INDEX `fk_administrador_has_Equipamento_Equipamento1_idx` (`idEquip` ASC),
  INDEX `fk_administrador_has_Equipamento_administrador1_idx` (`idAdministrador` ASC),
  CONSTRAINT `fk_administrador_has_Equipamento_administrador1`
    FOREIGN KEY (`idAdministrador`)
    REFERENCES `inventarioTeste`.`administrador` (`idAdministrador`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_administrador_has_Equipamento_Equipamento1`
    FOREIGN KEY (`idEquip`)
    REFERENCES `inventarioTeste`.`equipamento` (`idEquip`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventarioTeste`.`termoResponsabilidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventarioTeste`.`termoResponsabilidade` (
  `numTermo` INT NOT NULL,
  `idEquip` INT NOT NULL,
  `idUsuarioFinal` INT NOT NULL,
  `dataInicioTermo` TIMESTAMP NOT NULL DEFAULT current_timestamp,
  `dataTerminoTermo` DATE NULL,
  INDEX `fk_termoResponsabilidade_usuarioFinal1_idx` (`idUsuarioFinal` ASC),
  INDEX `fk_termoResponsabilidade_equipamento1_idx` (`idEquip` ASC),
  PRIMARY KEY (`numTermo`),
  CONSTRAINT `fk_termoResponsabilidade_usuarioFinal1`
    FOREIGN KEY (`idUsuarioFinal`)
    REFERENCES `inventarioTeste`.`usuarioFinal` (`idUsuarioFinal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_termoResponsabilidade_equipamento1`
    FOREIGN KEY (`idEquip`)
    REFERENCES `inventarioTeste`.`equipamento` (`idEquip`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventarioTeste`.`redeConfig`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventarioTeste`.`redeConfig` (
  `idRedeConfig` INT NOT NULL AUTO_INCREMENT,
  `idEquip` INT NOT NULL,
  `ipRedeConfig` VARCHAR(15) NOT NULL,
  `hostRedeConfig` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`idRedeConfig`),
  INDEX `fk_redeConfig_Equipamento1_idx` (`idEquip` ASC),
  CONSTRAINT `fk_redeConfig_Equipamento1`
    FOREIGN KEY (`idEquip`)
    REFERENCES `inventarioTeste`.`equipamento` (`idEquip`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `inventarioTeste` ;

-- -----------------------------------------------------
-- Placeholder table for view `inventarioTeste`.`equipamentoDesktop`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventarioTeste`.`equipamentoDesktop` (`idEquip` INT, `tipoEquip` INT, `origemEquip` INT, `modeloEquip` INT, `numSerieEquip` INT, `numSerieGabineteEquip` INT, `numSerieMouseEquip` INT, `numSerieTecladoEquip` INT, `numSerieMonitorEquip` INT, `dataEntradaEquip` INT, `statusEquip` INT, `idFornecedor` INT, `idEnderecoFornecedor` INT, `nomeContatoFornecedor` INT, `nomeFornecedor` INT, `emailFornecedor` INT, `telefoneFornecedor` INT, `statusFornecedor` INT, `idLocalidade` INT, `idEnderecoLocal` INT, `identificacaoLocal` INT, `setorLocal` INT, `statusLocal` INT, `idUsuarioFinal` INT, `nomeUsuario` INT, `matriculaUsuario` INT, `emailUsuario` INT, `telefoneUsuario` INT, `StatusUsuario` INT);

-- -----------------------------------------------------
-- Placeholder table for view `inventarioTeste`.`equipamentoNotebook`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventarioTeste`.`equipamentoNotebook` (`idEquip` INT, `tipoEquip` INT, `origemEquip` INT, `modeloEquip` INT, `numSerieEquip` INT, `numSerieGabineteEquip` INT, `numSerieMouseEquip` INT, `numSerieTecladoEquip` INT, `numSerieMonitorEquip` INT, `dataEntradaEquip` INT, `statusEquip` INT, `idFornecedor` INT, `idEnderecoFornecedor` INT, `nomeContatoFornecedor` INT, `nomeFornecedor` INT, `emailFornecedor` INT, `telefoneFornecedor` INT, `statusFornecedor` INT, `idLocalidade` INT, `idEnderecoLocal` INT, `identificacaoLocal` INT, `setorLocal` INT, `statusLocal` INT, `idUsuarioFinal` INT, `nomeUsuario` INT, `matriculaUsuario` INT, `emailUsuario` INT, `telefoneUsuario` INT, `StatusUsuario` INT);

-- -----------------------------------------------------
-- Placeholder table for view `inventarioTeste`.`equipamentoAllInOne`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventarioTeste`.`equipamentoAllInOne` (`idEquip` INT, `tipoEquip` INT, `origemEquip` INT, `modeloEquip` INT, `numSerieEquip` INT, `numSerieGabineteEquip` INT, `numSerieMouseEquip` INT, `numSerieTecladoEquip` INT, `numSerieMonitorEquip` INT, `dataEntradaEquip` INT, `statusEquip` INT, `idFornecedor` INT, `idEnderecoFornecedor` INT, `nomeContatoFornecedor` INT, `nomeFornecedor` INT, `emailFornecedor` INT, `telefoneFornecedor` INT, `statusFornecedor` INT, `idLocalidade` INT, `idEnderecoLocal` INT, `identificacaoLocal` INT, `setorLocal` INT, `statusLocal` INT, `idUsuarioFinal` INT, `nomeUsuario` INT, `matriculaUsuario` INT, `emailUsuario` INT, `telefoneUsuario` INT, `StatusUsuario` INT);

-- -----------------------------------------------------
-- Placeholder table for view `inventarioTeste`.`equipamentoImpressora`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventarioTeste`.`equipamentoImpressora` (`idEquip` INT, `tipoEquip` INT, `origemEquip` INT, `modeloEquip` INT, `numSerieEquip` INT, `numSerieGabineteEquip` INT, `numSerieMouseEquip` INT, `numSerieTecladoEquip` INT, `numSerieMonitorEquip` INT, `dataEntradaEquip` INT, `statusEquip` INT, `idFornecedor` INT, `idEnderecoFornecedor` INT, `nomeContatoFornecedor` INT, `nomeFornecedor` INT, `emailFornecedor` INT, `telefoneFornecedor` INT, `statusFornecedor` INT, `idLocalidade` INT, `idEnderecoLocal` INT, `identificacaoLocal` INT, `setorLocal` INT, `statusLocal` INT, `idUsuarioFinal` INT, `nomeUsuario` INT, `matriculaUsuario` INT, `emailUsuario` INT, `telefoneUsuario` INT, `StatusUsuario` INT);

-- -----------------------------------------------------
-- Placeholder table for view `inventarioTeste`.`equipamentoFull`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventarioTeste`.`equipamentoFull` (`idEquip` INT, `tipoEquip` INT, `origemEquip` INT, `modeloEquip` INT, `numSerieEquip` INT, `numSerieGabineteEquip` INT, `numSerieMouseEquip` INT, `numSerieTecladoEquip` INT, `numSerieMonitorEquip` INT, `dataEntradaEquip` INT, `statusEquip` INT, `idFornecedor` INT, `idEnderecoFornecedor` INT, `nomeContatoFornecedor` INT, `nomeFornecedor` INT, `emailFornecedor` INT, `telefoneFornecedor` INT, `statusFornecedor` INT, `idLocalidade` INT, `idEnderecoLocal` INT, `identificacaoLocal` INT, `setorLocal` INT, `statusLocal` INT, `idUsuarioFinal` INT, `nomeUsuario` INT, `matriculaUsuario` INT, `emailUsuario` INT, `telefoneUsuario` INT, `StatusUsuario` INT, `ipRedeConfig` INT, `hostRedeConfig` INT, `dataDescarte` INT);

-- -----------------------------------------------------
-- View `inventarioTeste`.`equipamentoDesktop`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventarioTeste`.`equipamentoDesktop`;
USE `inventarioTeste`;
CREATE  OR REPLACE VIEW `equipamentoDesktop` AS
	SELECT e.idEquip,
    e.tipoEquip,
    e.origemEquip,
    e.modeloEquip,
    e.numSerieEquip,
    e.numSerieGabineteEquip,
    e.numSerieMouseEquip,
    e.numSerieTecladoEquip,
    e.numSerieMonitorEquip,
    e.dataEntradaEquip,
    e.statusEquip,
    f.idFornecedor,
    f.idEnderecoFornecedor,
    f.nomeContatoFornecedor,
    f.nomeFornecedor,
    f.emailFornecedor,
    f.telefoneFornecedor,
    f.statusFornecedor,
    l.idLocalidade,
    l.idEnderecoLocal,
    l.identificacaoLocal,
    l.setorLocal,
    l.statusLocal,
    u.idUsuarioFinal,
    u.nomeUsuario,
    u.matriculaUsuario,
    u.emailUsuario,
    u.telefoneUsuario,
    u.StatusUsuario
    FROM equipamento e
    NATURAL JOIN fornecedor f
    NATURAL JOIN localidade l
    NATURAL JOIN usuarioFinal u
    LEFT OUTER JOIN redeConfig r
    ON r.idEquip = e.idEquip
    LEFT OUTER JOIN dataDescarte d
    ON d.idEquip = e.idEquip
    WHERE e.tipoEquip = 'D'
    GROUP BY e.idEquip
    ORDER BY e.idEquip;

-- -----------------------------------------------------
-- View `inventarioTeste`.`equipamentoNotebook`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventarioTeste`.`equipamentoNotebook`;
USE `inventarioTeste`;
CREATE  OR REPLACE VIEW `equipamentoNotebook` AS
	SELECT e.idEquip,
    e.tipoEquip,
    e.origemEquip,
    e.modeloEquip,
    e.numSerieEquip,
    e.numSerieGabineteEquip,
    e.numSerieMouseEquip,
    e.numSerieTecladoEquip,
    e.numSerieMonitorEquip,
    e.dataEntradaEquip,
    e.statusEquip,
    f.idFornecedor,
    f.idEnderecoFornecedor,
    f.nomeContatoFornecedor,
    f.nomeFornecedor,
    f.emailFornecedor,
    f.telefoneFornecedor,
    f.statusFornecedor,
    l.idLocalidade,
    l.idEnderecoLocal,
    l.identificacaoLocal,
    l.setorLocal,
    l.statusLocal,
    u.idUsuarioFinal,
    u.nomeUsuario,
    u.matriculaUsuario,
    u.emailUsuario,
    u.telefoneUsuario,
    u.StatusUsuario
    FROM equipamento e
    NATURAL JOIN fornecedor f
    NATURAL JOIN localidade l
    NATURAL JOIN usuarioFinal u
    LEFT OUTER JOIN redeConfig r
    ON r.idEquip = e.idEquip
    LEFT OUTER JOIN dataDescarte d
    ON d.idEquip = e.idEquip
    WHERE e.tipoEquip = 'N'
    GROUP BY e.idEquip
    ORDER BY e.idEquip;

-- -----------------------------------------------------
-- View `inventarioTeste`.`equipamentoAllInOne`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventarioTeste`.`equipamentoAllInOne`;
USE `inventarioTeste`;
CREATE  OR REPLACE VIEW `equipamentoAllInOne` AS
	SELECT e.idEquip,
    e.tipoEquip,
    e.origemEquip,
    e.modeloEquip,
    e.numSerieEquip,
    e.numSerieGabineteEquip,
    e.numSerieMouseEquip,
    e.numSerieTecladoEquip,
    e.numSerieMonitorEquip,
    e.dataEntradaEquip,
    e.statusEquip,
    f.idFornecedor,
    f.idEnderecoFornecedor,
    f.nomeContatoFornecedor,
    f.nomeFornecedor,
    f.emailFornecedor,
    f.telefoneFornecedor,
    f.statusFornecedor,
    l.idLocalidade,
    l.idEnderecoLocal,
    l.identificacaoLocal,
    l.setorLocal,
    l.statusLocal,
    u.idUsuarioFinal,
    u.nomeUsuario,
    u.matriculaUsuario,
    u.emailUsuario,
    u.telefoneUsuario,
    u.StatusUsuario
    FROM equipamento e
    NATURAL JOIN fornecedor f
    NATURAL JOIN localidade l
    NATURAL JOIN usuarioFinal u
    LEFT OUTER JOIN redeConfig r
    ON r.idEquip = e.idEquip
    LEFT OUTER JOIN dataDescarte d
    ON d.idEquip = e.idEquip
    WHERE e.tipoEquip = 'A'
    GROUP BY e.idEquip
    ORDER BY e.idEquip;

-- -----------------------------------------------------
-- View `inventarioTeste`.`equipamentoImpressora`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventarioTeste`.`equipamentoImpressora`;
USE `inventarioTeste`;
CREATE  OR REPLACE VIEW `equipamentoImpressora` AS
	SELECT e.idEquip,
    e.tipoEquip,
    e.origemEquip,
    e.modeloEquip,
    e.numSerieEquip,
    e.numSerieGabineteEquip,
    e.numSerieMouseEquip,
    e.numSerieTecladoEquip,
    e.numSerieMonitorEquip,
    e.dataEntradaEquip,
    e.statusEquip,
    f.idFornecedor,
    f.idEnderecoFornecedor,
    f.nomeContatoFornecedor,
    f.nomeFornecedor,
    f.emailFornecedor,
    f.telefoneFornecedor,
    f.statusFornecedor,
    l.idLocalidade,
    l.idEnderecoLocal,
    l.identificacaoLocal,
    l.setorLocal,
    l.statusLocal,
    u.idUsuarioFinal,
    u.nomeUsuario,
    u.matriculaUsuario,
    u.emailUsuario,
    u.telefoneUsuario,
    u.StatusUsuario
    FROM equipamento e
    NATURAL JOIN fornecedor f
    NATURAL JOIN localidade l
    NATURAL JOIN usuarioFinal u
    LEFT OUTER JOIN redeConfig r
    ON r.idEquip = e.idEquip
    LEFT OUTER JOIN dataDescarte d
    ON d.idEquip = e.idEquip
    WHERE e.tipoEquip = 'I'
    GROUP BY e.idEquip
    ORDER BY e.idEquip;

-- -----------------------------------------------------
-- View `inventarioTeste`.`equipamentoFull`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventarioTeste`.`equipamentoFull`;
USE `inventarioTeste`;
CREATE  OR REPLACE VIEW `equipamentoFull` AS
	SELECT e.idEquip,
    e.tipoEquip,
    e.origemEquip,
    e.modeloEquip,
    e.numSerieEquip,
    e.numSerieGabineteEquip,
    e.numSerieMouseEquip,
    e.numSerieTecladoEquip,
    e.numSerieMonitorEquip,
    e.dataEntradaEquip,
    e.statusEquip,
    f.idFornecedor,
    f.idEnderecoFornecedor,
    f.nomeContatoFornecedor,
    f.nomeFornecedor,
    f.emailFornecedor,
    f.telefoneFornecedor,
    f.statusFornecedor,
    l.idLocalidade,
    l.idEnderecoLocal,
    l.identificacaoLocal,
    l.setorLocal,
    l.statusLocal,
    u.idUsuarioFinal,
    u.nomeUsuario,
    u.matriculaUsuario,
    u.emailUsuario,
    u.telefoneUsuario,
    u.StatusUsuario,
    r.ipRedeConfig,
    r.hostRedeConfig,
    d.dataDescarte 
    FROM equipamento e
    NATURAL JOIN fornecedor f
    NATURAL JOIN localidade l
    NATURAL JOIN usuarioFinal u
    LEFT OUTER JOIN redeConfig r
    ON r.idEquip = e.idEquip
    LEFT OUTER JOIN dataDescarte d
    ON d.idEquip = e.idEquip
    GROUP BY e.idEquip
    ORDER BY e.idEquip;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;





-- Inserts --
USE `inventarioTeste` ;

INSERT INTO `endereco` (`idendereco`, `logradouroEndereco`, `numeroEndereco`, `complementoEndereco`, `bairroEndereco`, `cidadeEndereco`, `cepEndereco`, `estadoEndereco`, `statusEndereco`) VALUES
(1, 'Av. Miguel Varlez', '666', '', 'Centro', 'Caraguatatuba', '11660-000', 'SP', 'A'),
(2, 'Av. do Estado', '100', 'BLOCO A', 'Centro', 'São Paulo', '04567-323', 'SP', 'A'),
(3, 'rua 5', '118', '', 'martim', 'caragua', '11660-000', 'SP', 'A'),
(4, 'rua X', '111', '', 'Barranco Baixo', 'Caragua', '11660-000', 'SP', 'A'),
(5, 'rua Y', '3456', '', 'Lapa', 'Rio de Janeiro', '87324-675', 'RJ', 'A');

INSERT INTO `fornecedor` (`idFornecedor`, `idEnderecoFornecedor`, `nomeContatoFornecedor`, `nomeFornecedor`, `emailFornecedor`, `telefoneFornecedor`, `statusFornecedor`) VALUES
(1, 1, 'João Batista', 'Patrimonio - estoque TI', 'patrimonioti@suaempresa.com', '12-98888-7777', 'A'),
(2, 2, 'Fulano', 'Déu Computadores', 'fulano@deucomp.com.br', '11-3245-9867', 'A'),
(3, 5, 'Beutrano', 'JADE', 'vendas@jade.com.br', '21-3455-5647', 'A');

INSERT INTO `localidade` (`idLocalidade`, `idEnderecoLocal`, `identificacaoLocal`, `setorLocal`, `statusLocal`) VALUES
(1, 1, 'Estoque TI', 'TI', 'A'),
(2, 3, 'Desenvolvimento', 'TI', 'A'),
(3, 4, 'Contabilidade', 'Administração', 'A');

INSERT INTO `usuariofinal` (`idUsuarioFinal`, `nomeUsuario`, `matriculaUsuario`, `emailUsuario`, `telefoneUsuario`, `statusUsuario`) VALUES
(1, 'Estoque', 1, 'estoque@suaempresa.com', '12-3888-8888', 'A'),
(2, 'Gil', 2, 'gil@empresa.com.br', '12-3882-8955', 'A'),
(3, 'Rosbervaldo', 3, 'rbsv@empresa.com.br', '12-3887-8888', 'A');
	
INSERT INTO `equipamento` (`idEquip`, `idUsuarioFinal`, `idLocalidade`, `idFornecedor`, `tipoEquip`, `origemEquip`, `modeloEquip`, `numSerieEquip`, `numSerieGabineteEquip`, 
`numSerieMouseEquip`, `numSerieTecladoEquip`, `numSerieMonitorEquip`, `dataEntradaEquip`, `statusEquip`, `equipamentocol`) VALUES
(1, 1, 1, 2, 'N', 'P', 'I7', 'DEU34256436BR', '', '', '', '', '2015-12-04 13:05:18', 'L', NULL),
(2, 1, 1, 3, 'A', 'L', 'I3', '344365JABE341BR', '', '434356BJADE', '34136T2345JADE', '', '2015-12-04 13:06:06', 'L', NULL),
(3, 1, 1, 1, 'I', 'P', 'EPSON-LX810', '3425465EP343810L', '', '', '', '', '2015-12-04 13:06:32', 'L', NULL),
(4, 1, 1, 3, 'D', 'L', 'I5', '435314JD234', '34525423JD1', '345441364R1JD2', 'EWTRTGRJD3', '32145154JD4', '2015-12-04 13:07:03', 'L', NULL),
(5, 1, 1, 3, 'A', 'L', 'I3', 'JD214345BRE', '', '3243215JD234BRE', '234235345KDBRE', '', '2015-12-04 13:08:56', 'L', NULL),
(6, 1, 1, 1, 'I', 'L', 'CANNON XYZ', 'CNB3445432BR', '', '', '', '', '2015-12-04 13:10:40', 'L', NULL),
(7, 1, 1, 2, 'N', 'P', 'i7', '43543265', '', '', '', '', '2015-12-04 13:11:06', 'L', NULL);	